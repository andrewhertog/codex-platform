name: Build, package and test

on:
  push:
    branches:
      - master
  workflow_dispatch:
  pull_request:
    branches:
      - master
  # schedule:
  #   - cron: '0 4 * * *' # Runs every day at 4am: https://docs.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule

jobs:

  build:
    name: ${{ matrix.os }}, Node.js v${{ matrix.node }}
    env:
      BRANCH_NAME: ${{ github.ref_name }}
    permissions:
      contents: write

    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, ubuntu-22.04, macos-14]
        node: ['22.12']

    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # To fetch all history for all branches and tags. (Will be required for caching with lerna: https://github.com/markuplint/markuplint/pull/111)

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          registry-url: 'https://registry.npmjs.org'

      - name: Use Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install deps
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install --no-install-recommends -y libopenjp2-tools rpm

      - name: Make yq tool available on Windows runners
        if: matrix.os == 'windows-2019'
        run: choco install yq

      - name: Update electron-builder.yaml
        shell: bash
        working-directory: applications/electron
        run: |
          export REPONAME=$(echo ${{ github.repository }} | cut -d '/' -f 2)
          yq -i e '.win.publish.owner |= "${{github.repository_owner}}"' electron-builder.yml
          yq -i e '.mac.publish.owner |= "${{github.repository_owner}}"' electron-builder.yml
          yq -i e '.linux.publish.owner |= "${{github.repository_owner}}"' electron-builder.yml
          yq -i e '.win.publish.repo |= env(REPONAME)' electron-builder.yml
          yq -i e '.mac.publish.repo |= env(REPONAME)' electron-builder.yml
          yq -i e '.linux.publish.repo |= env(REPONAME)' electron-builder.yml

      - name: Build and package
        shell: bash
        if: matrix.os == 'macos-14'
        env:
          CSC_LINK: ${{ secrets.MAC_CSC_P12 }}
          CSC_KEY_PASSWORD: ${{ secrets.MAC_CSC_P12_PASSWORD }}
          CSC_IDENTITY_AUTO_DISCOVERY: ${{ github.ref == 'refs/heads/master' &&  'true' || 'false' }}
          # Add notarization variables for electron-builder
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          # Make sure the team ID is directly accessible
          NODE_OPTIONS: --max_old_space_size=4096
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # https://github.com/microsoft/vscode-ripgrep/issues/9
        run: |
          yarn --skip-integrity-check --network-timeout 100000
          yarn build
          yarn download:plugins
          yarn package:applications:prod
          
      - name: Build and package
        shell: bash
        if: matrix.os != 'macos-14'
        env:
          NODE_OPTIONS: --max_old_space_size=4096
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # https://github.com/microsoft/vscode-ripgrep/issues/9
        run: |
          yarn --skip-integrity-check --network-timeout 100000
          yarn build
          yarn download:plugins
          yarn package:applications:prod

      

      # - name: Test (Linux)
      #   if: matrix.tests != 'skip' && runner.os == 'Linux'
      #   uses: GabrielBB/xvfb-action@86d97bde4a65fe9b290c0b3fb92c2c4ed0e5302d #1.6
      #   with:
      #     run: yarn electron test

      # - name: Test (Windows)
      #   if: matrix.tests != 'skip' && runner.os == 'Windows'
      #   shell: bash
      #   run: |
      #     yarn electron test
          
      # - name: Test (macOS)
      #   if: matrix.tests != 'skip' && runner.os == 'macOS'
      #   shell: bash
      #   run: |
      #     yarn electron test

      # - name: Lint
      #   if: matrix.tests != 'skip'
      #   shell: bash
      #   run: |
      #     yarn lint
